#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// função pra mostrar o menu
int exibir_menu() {
    int opcao;
    while (1) {
        printf("\n----- TITULO DO JOGO -----\n");
        printf("1. Pergunta e Resposta\n");
        printf("2. Cobra na Caixa!\n");
        printf("3. Gousmas War\n");
        printf("4. Sair\n");
        printf("Escolha uma opcao: ");
        
        // Verifica se o usuário digitou um número válido
        if (scanf("%d", &opcao) != 1) {
            // Se não foi um número, limpa o buffer
            while (getchar() != '\n'); // Descarte os caracteres do buffer até encontrar o '\n'
            printf("Opção inválida. Tente novamente.\n");
        } else if (opcao >= 1 && opcao <= 4) {
            return opcao;
        } else {
            printf("Opção inválida. Tente novamente.\n");
        }
    }
}

// função para o jogo pergunta e resposta
int jogo_pergunta_resposta() {
    int resposta, pergunta = 1;

    printf("\n----- Jogo: Pergunta e Resposta -----\n");
    printf("Responda as seguintes perguntas:\n");

    while (pergunta <= 5) {
        if (pergunta == 1) {
            printf("1. Qual e a materia do giroto?\n");
            printf("1) pensamento computacional\n2) algebra linear\n3) algoritmo e codificacao de sistemas\n4) programacao de sofware\n");
            while (1) {
                printf("Escolha a alternativa (1-4): ");
                if (scanf("%d", &resposta) != 1) {
                    while (getchar() != '\n');  // Limpa o buffer
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                } else if (resposta >= 1 && resposta <= 4) {
                    break;
                } else {
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                }
            }
            if (resposta == 3) printf("Resposta correta!\n");
            else printf("Resposta incorreta! A resposta correta e: 3) algoritmo e codificacao de sistemas\n");
        } else if (pergunta == 2) {
            printf("2. Quanto e 50-12*2\n");
            printf("1) 74\n2) 76\n3) 81\n4) 90\n");
            while (1) {
                printf("Escolha a alternativa (1-4): ");
                if (scanf("%d", &resposta) != 1) {
                    while (getchar() != '\n');  // Limpa o buffer
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                } else if (resposta >= 1 && resposta <= 4) {
                    break;
                } else {
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                }
            }
            if (resposta == 2) printf("Resposta correta!\n");
            else printf("Resposta incorreta! A resposta correta e: 2) 76\n");
        } else if (pergunta == 3) {
            printf("3. qual nome da capital do Brasil?\n");
            printf("1) Brasilia\n2) Sao paulo\n3) Rio de janeiro\n4) Belem\n");
            while (1) {
                printf("Escolha a alternativa (1-4): ");
                if (scanf("%d", &resposta) != 1) {
                    while (getchar() != '\n');  // Limpa o buffer
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                } else if (resposta >= 1 && resposta <= 4) {
                    break;
                } else {
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                }
            }
            if (resposta == 1) printf("Resposta correta!\n");
            else printf("Resposta incorreta! A resposta correta e: 1) Brasilia\n");
        } else if (pergunta == 4) {
            printf("4. em que ano o homem pisou na lua?\n");
            printf("1) 1945\n2) 1969\n3) 1901\n4) 1922\n");
            while (1) {
                printf("Escolha a alternativa (1-4): ");
                if (scanf("%d", &resposta) != 1) {
                    while (getchar() != '\n');  // Limpa o buffer
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                } else if (resposta >= 1 && resposta <= 4) {
                    break;
                } else {
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                }
            }
            if (resposta == 2) printf("Resposta correta!\n");
            else printf("Resposta incorreta! A resposta correta e: 2) 1969\n");
        } else if (pergunta == 5) {
            printf("5. qual o pais com o maior indice de felicidade no mundo\n");
            printf("1) Brasil\n2) India\n3) Finlandia\n4) Estados Unidos\n");
            while (1) {
                printf("Escolha a alternativa (1-4): ");
                if (scanf("%d", &resposta) != 1) {
                    while (getchar() != '\n');  // Limpa o buffer
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                } else if (resposta >= 1 && resposta <= 4) {
                    break;
                } else {
                    printf("Resposta inválida. Escolha entre 1 e 4.\n");
                }
            }
            if (resposta == 3) printf("Resposta correta!\n");
            else printf("Resposta incorreta! A resposta correta e: 3) Finlandia\n");
        }
        pergunta++;
    }

    return 1; // retorna 1 pra mostrar q o jogo foi completado
}

// código para o jogo cobra na caixa
int jogo_cobra_na_caixa() {
    int escolha, sorteio, continuar;

    // sortear posicao do botao e da cobra
    sorteio = rand() % 5 + 1; // uns numero aleatorio de 1 a 5

    printf("\n----- Jogo: Cobra na Caixa! -----\n");

    while (1) {
        printf("Escolha um numero de 1 a 5 para tentar encontrar o botao ou a cobra:\n");
        while (1) {
            printf("Escolha: ");
            if (scanf("%d", &escolha) != 1) {
                while (getchar() != '\n');  // Limpa o buffer
                printf("Escolha inválida. Digite um número entre 1 e 5.\n");
            } else if (escolha >= 1 && escolha <= 5) {
                break;
            } else {
                printf("Escolha inválida. Digite um número entre 1 e 5.\n");
            }
        }

        if (escolha == sorteio) {
            printf("Voce encontrou o botao! Parabens, voce venceu!\n");
            break;
        } else if (escolha == rand() % 5 + 1) {
            printf("Voce encontrou a cobra! Game Over!\n");
            break;
        } else {
            printf("A caixa esta vazia. Tente novamente.\n");
        }
    }

    // pergunta se o jogador quer jogar denovo ou ir pro menu
    while (1) {
        printf("\nDeseja jogar novamente? (1 para sim, 2 para voltar ao menu): ");
        if (scanf("%d", &continuar) != 1) {
            while (getchar() != '\n');  // Limpa o buffer
            printf("Opção inválida. Digite 1 ou 2.\n");
        } else if (continuar == 1) {
            return jogo_cobra_na_caixa();  // Reinicia o jogo
        } else if (continuar == 2) {
            return 2;  // Retorna para o menu
        } else {
            printf("Opção inválida. Digite 1 ou 2.\n");
        }
    }
}

#define MAX_FURIA 5

typedef struct {
    int furia;
    int ativa;
} Gousma;

// Função para exibir o status de cada jogador
void exibir_status(int jogador, Gousma gousmas[]) {
    printf("\n--- Jogador %d ---\n", jogador);
    
    if (gousmas[0].ativa) {
        printf("Gousma 1: Fúria %d\n", gousmas[0].furia);
    }
    if (gousmas[1].ativa) {
        printf("Gousma 2: Fúria %d\n", gousmas[1].furia);
    }
}

// Função para atacar uma Gousma adversária
void atacar(Gousma *atacante, Gousma *defensor) {
    if (atacante->ativa && defensor->ativa) {
        defensor->furia += atacante->furia;
        atacante->furia = 0;  // A Gousma atacante perde sua fúria após atacar
        printf("A Gousma do Jogador %d atacou a Gousma do Jogador %d!\n", (atacante == defensor ? 1 : 2), (defensor == atacante ? 1 : 2));

        // Se a fúria da Gousma adversária ultrapassar o limite, ela se desintegra
        if (defensor->furia > MAX_FURIA) {
            printf("A Gousma com fúria %d se desintegrou!\n", defensor->furia);
            defensor->ativa = 0;  // A Gousma se desintegra
        }
    }
}

// Função para dividir uma Gousma
void dividir_gousma(Gousma *gousma) {
    if (gousma->furia > 1) {
        int metade_furia = gousma->furia / 2;
        gousma->furia = metade_furia;
        printf("A Gousma foi dividida, nova Gousma com fúria %d criada.\n", metade_furia);
    } else {
        printf("Não é possível dividir uma Gousma com fúria menor que 2.\n");
    }
}

// Função para verificar se o jogador perdeu todas as Gousmas
int verificar_derrota(Gousma gousmas[]) {
    if (!gousmas[0].ativa && !gousmas[1].ativa) {
        return 1;  // Jogador perdeu todas as Gousmas
    }
    return 0;  // Jogador ainda tem Gousmas ativas
}

// Função para ler um número inteiro e validar a entrada
int ler_inteiro() {
    int num;
    while (scanf("%d", &num) != 1) {
        printf("Entrada inválida! Digite um número inteiro.\n");
        while (getchar() != '\n'); // Limpa o buffer de entrada
    }
    return num;
}

// Função para o jogo Gousmas War
void jogo_gousmas_war() {
    Gousma jogador1_gousmas[2] = {{1, 1}, {1, 1}};  // Jogador 1 começa com 2 Gousmas de fúria 1
    Gousma jogador2_gousmas[2] = {{1, 1}, {1, 1}};  // Jogador 2 começa com 2 Gousmas de fúria 1
    int turno = 1;  // Começa com o Jogador 1
    int comando, gousma_escolhida;

    printf("\n----- Jogo Gousmas War -----\n");
    printf("Cada jogador começa com 2 Gousmas, cada uma com fúria 1.\n");

    // Loop do jogo
    while (1) {
        if (turno == 1) {
            printf("\n----- Jogador 1 (Seu turno) -----\n");
            exibir_status(1, jogador1_gousmas);
            printf("\nEscolha uma ação:\n");
            printf("1. Atacar com Gousma 1\n");
            printf("2. Atacar com Gousma 2\n");
            printf("3. Dividir Gousma\n");
            printf("Digite sua opção: ");
            comando = ler_inteiro();

            if (comando == 1) {
                printf("Escolha a Gousma adversária para atacar:\n");
                printf("1. Gousma 1 do Jogador 2\n");
                printf("2. Gousma 2 do Jogador 2\n");
                gousma_escolhida = ler_inteiro();
                if (gousma_escolhida == 1) {
                    atacar(&jogador1_gousmas[0], &jogador2_gousmas[0]);
                } else if (gousma_escolhida == 2) {
                    atacar(&jogador1_gousmas[0], &jogador2_gousmas[1]);
                }
            } else if (comando == 2) {
                printf("Escolha a Gousma adversária para atacar:\n");
                printf("1. Gousma 1 do Jogador 2\n");
                printf("2. Gousma 2 do Jogador 2\n");
                gousma_escolhida = ler_inteiro();
                if (gousma_escolhida == 1) {
                    atacar(&jogador1_gousmas[1], &jogador2_gousmas[0]);
                } else if (gousma_escolhida == 2) {
                    atacar(&jogador1_gousmas[1], &jogador2_gousmas[1]);
                }
            } else if (comando == 3) {
                printf("Escolha qual Gousma dividir:\n");
                printf("1. Gousma 1\n");
                printf("2. Gousma 2\n");
                gousma_escolhida = ler_inteiro();
                if (gousma_escolhida == 1) {
                    dividir_gousma(&jogador1_gousmas[0]);
                } else if (gousma_escolhida == 2) {
                    dividir_gousma(&jogador1_gousmas[1]);
                }
            }

            if (verificar_derrota(jogador2_gousmas)) {
                printf("\nJogador 1 venceu!\n");
                break;
            }
            turno = 2;  // Passa para o turno do Jogador 2
        } else {
            printf("\n----- Jogador 2 (Seu turno) -----\n");
            exibir_status(2, jogador2_gousmas);
            printf("\nEscolha uma ação:\n");
            printf("1. Atacar com Gousma 1\n");
            printf("2. Atacar com Gousma 2\n");
            printf("3. Dividir Gousma\n");
            printf("Digite sua opção: ");
            comando = ler_inteiro();

            if (comando == 1) {
                printf("Escolha a Gousma adversária para atacar:\n");
                printf("1. Gousma 1 do Jogador 1\n");
                printf("2. Gousma 2 do Jogador 1\n");
                gousma_escolhida = ler_inteiro();
                if (gousma_escolhida == 1) {
                    atacar(&jogador2_gousmas[0], &jogador1_gousmas[0]);
                } else if (gousma_escolhida == 2) {
                    atacar(&jogador2_gousmas[0], &jogador1_gousmas[1]);
                }
            } else if (comando == 2) {
                printf("Escolha a Gousma adversária para atacar:\n");
                printf("1. Gousma 1 do Jogador 1\n");
                printf("2. Gousma 2 do Jogador 1\n");
                gousma_escolhida = ler_inteiro();
                if (gousma_escolhida == 1) {
                    atacar(&jogador2_gousmas[1], &jogador1_gousmas[0]);
                } else if (gousma_escolhida == 2) {
                    atacar(&jogador2_gousmas[1], &jogador1_gousmas[1]);
                }
            } else if (comando == 3) {
                printf("Escolha qual Gousma dividir:\n");
                printf("1. Gousma 1\n");
                printf("2. Gousma 2\n");
                gousma_escolhida = ler_inteiro();
                if (gousma_escolhida == 1) {
                    dividir_gousma(&jogador2_gousmas[0]);
                } else if (gousma_escolhida == 2) {
                    dividir_gousma(&jogador2_gousmas[1]);
                }
            }

            if (verificar_derrota(jogador1_gousmas)) {
                printf("\nJogador 2 venceu!\n");
                break;
            }
            turno = 1;  // Passa para o turno do Jogador 1
        }
    }

    // Pergunta ao jogador se ele deseja jogar novamente ou retornar ao menu
    int opcao;
    printf("\nDeseja jogar novamente?\n1. Sim\n2. Não\n");
    opcao = ler_inteiro();
    if (opcao == 1) {
        jogo_gousmas_war();
    } else {
        printf("Voltando ao menu principal...\n");
    }
}


// função principal
int main() {
    int opcao;

    srand(time(NULL)); // Inicializa o gerador de números aleatórios

    do {
        opcao = exibir_menu();

        switch (opcao) {
            case 1:
                jogo_pergunta_resposta();
                break;
            case 2:
                jogo_cobra_na_caixa();
                break;
            case 3:
                jogo_gousmas_war();
                break;
            case 4:
                printf("Saindo...\n");
                break;
            default:
                break;
        }

    } while (opcao != 4);

    return 0;
}
